// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  password String

  totalSubmissions Int  @default(0)
  role             Role @default(Admin)

  submission Submission[]
}

model Boilerplate {
  id         String    @id @default(uuid())
  languageId String
  code       String
  Problem    Problem[]
}

model Problem {
  id        String @id @default(uuid())
  statement String
  input     String
  output    String

  submissions   Submission[]
  boilerplateId String?
  Boilerplate   Boilerplate? @relation(fields: [boilerplateId], references: [id])
}

model Submission {
  id         String @id @default(uuid())
  languageId String

  code      String
  User      User?            @relation(fields: [userId], references: [id])
  userId    String?
  status    SubmissionStatus
  problemId String
  problem   Problem          @relation(fields: [problemId], references: [id])
}

enum SubmissionStatus {
  Pending
  Accepted
  Rejected
}

enum Role {
  Admin
  User
}
